{
  "hints": {
    "arc200_name()byte[32]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_symbol()byte[8]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_decimals()uint8": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_totalSupply()uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_balanceOf(address)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_allowance(address,address)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_transfer(address,uint256)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_approve(address,uint256)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_transferFrom(address,address,uint256)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "supportsInterface(byte[4])bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "zeroAddress()address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "hasBox(address,address)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createBalanceBox(address)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createAllowanceBox(address,address)bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "noop(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "updateApplication()void": {
      "call_config": {
        "update_application": "CALL"
      }
    },
    "deleteApplication()void": {
      "call_config": {
        "delete_application": "CALL"
      }
    },
    "manager()address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "grant(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication(address,byte[32],byte[8],uint8,uint256)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "bootstrap(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_exchange()(uint64,address)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "post_update()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_redeem(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "arc200_swapBack(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "name": {
          "type": "bytes",
          "key": "name"
        },
        "symbol": {
          "type": "bytes",
          "key": "symbol"
        },
        "decimals": {
          "type": "bytes",
          "key": "decimals"
        },
        "totalSupply": {
          "type": "bytes",
          "key": "total_supply"
        },
        "initialized": {
          "type": "bytes",
          "key": "initialized"
        },
        "warden": {
          "type": "bytes",
          "key": "warden"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 6,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "SmartAsset",
    "desc": "",
    "methods": [
      {
        "name": "arc200_name",
        "readonly": true,
        "args": [],
        "returns": {
          "type": "byte[32]"
        }
      },
      {
        "name": "arc200_symbol",
        "readonly": true,
        "args": [],
        "returns": {
          "type": "byte[8]"
        }
      },
      {
        "name": "arc200_decimals",
        "readonly": true,
        "args": [],
        "returns": {
          "type": "uint8"
        }
      },
      {
        "name": "arc200_totalSupply",
        "readonly": true,
        "args": [],
        "returns": {
          "type": "uint256"
        }
      },
      {
        "name": "arc200_balanceOf",
        "readonly": true,
        "args": [
          {
            "name": "owner",
            "type": "address"
          }
        ],
        "returns": {
          "type": "uint256"
        }
      },
      {
        "name": "arc200_allowance",
        "readonly": true,
        "args": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "spender",
            "type": "address"
          }
        ],
        "returns": {
          "type": "uint256"
        }
      },
      {
        "name": "arc200_transfer",
        "args": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "arc200_approve",
        "args": [
          {
            "name": "spender",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "arc200_transferFrom",
        "args": [
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "returns": {
          "type": "bool"
        },
        "events": [
          {
            "name": "arc200_Transfer",
            "args": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "desc": ""
          }
        ]
      },
      {
        "name": "supportsInterface",
        "readonly": true,
        "args": [
          {
            "name": "interfaceID",
            "type": "byte[4]"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "zeroAddress",
        "readonly": true,
        "args": [],
        "returns": {
          "type": "address"
        }
      },
      {
        "name": "hasBox",
        "readonly": true,
        "args": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "spender",
            "type": "address"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "createBalanceBox",
        "args": [
          {
            "name": "owner",
            "type": "address"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "createAllowanceBox",
        "args": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "spender",
            "type": "address"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "noop",
        "args": [
          {
            "name": "_n",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "updateApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "manager",
        "readonly": true,
        "args": [],
        "returns": {
          "type": "address"
        }
      },
      {
        "name": "grant",
        "args": [
          {
            "name": "manager",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [
          {
            "name": "manager",
            "type": "address"
          },
          {
            "name": "name",
            "type": "byte[32]"
          },
          {
            "name": "symbol",
            "type": "byte[8]"
          },
          {
            "name": "decimals",
            "type": "uint8"
          },
          {
            "name": "totalSupply",
            "type": "uint256"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bootstrap",
        "args": [
          {
            "name": "txn",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        },
        "events": [
          {
            "name": "arc200_Transfer",
            "args": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "desc": ""
          }
        ]
      },
      {
        "name": "arc200_exchange",
        "args": [],
        "returns": {
          "type": "(uint64,address)"
        }
      },
      {
        "name": "post_update",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "arc200_redeem",
        "args": [
          {
            "name": "amount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "arc200_swapBack",
        "args": [
          {
            "name": "amount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ],
    "events": [
      {
        "name": "arc200_Transfer",
        "args": [
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "desc": ""
      },
      {
        "name": "arc200_Approval",
        "args": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "spender",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "desc": ""
      }
    ]
  }
}