{
	"hints": {
		"createApplication(address,uint64)void": {
			"call_config": {
				"no_op": "CREATE"
			}
		},
		"updateApplication()void": {
			"call_config": {
				"update_application": "CALL"
			}
		},
		"setFee(uint64)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"setOwner(address)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"collectFee(uint64)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"createAlgoSellOrder(pay,application,uint256)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"createAlgoBuyOrder(application,uint256,uint64)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"fillAlgoToArc200Order(uint64,uint256)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"fillArc200ToAlgoOrder(uint64,pay)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"cancelOrder(uint64)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"registerOnline(byte[],byte[],byte[],uint64,uint64,uint64)void": {
			"call_config": {
				"no_op": "CALL"
			}
		},
		"registerOffline()void": {
			"call_config": {
				"no_op": "CALL"
			}
		}
	},
	"bare_call_config": {
		"no_op": "NEVER",
		"opt_in": "NEVER",
		"close_out": "NEVER",
		"update_application": "NEVER",
		"delete_application": "NEVER"
	},
	"schema": {
		"local": {
			"declared": {},
			"reserved": {}
		},
		"global": {
			"declared": {
				"owner": {
					"type": "bytes",
					"key": "owner"
				},
				"fee": {
					"type": "uint64",
					"key": "fee"
				},
				"feeAccumulated": {
					"type": "uint64",
					"key": "fee_acc"
				},
				"orderCounter": {
					"type": "uint64",
					"key": "order_counter"
				}
			},
			"reserved": {}
		}
	},
	"state": {
		"global": {
			"num_byte_slices": 1,
			"num_uints": 3
		},
		"local": {
			"num_byte_slices": 0,
			"num_uints": 0
		}
	},
	"source": {
		"approval": "",
		"clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
	},
	"contract": {
		"name": "LimitOrders001",
		"desc": "",
		"methods": [
			{
				"name": "createApplication",
				"args": [
					{
						"name": "owner",
						"type": "address"
					},
					{
						"name": "fee",
						"type": "uint64"
					}
				],
				"returns": {
					"type": "void"
				}
			},
			{
				"name": "updateApplication",
				"args": [],
				"returns": {
					"type": "void"
				}
			},
			{
				"name": "setFee",
				"args": [
					{
						"name": "ownerFee",
						"type": "uint64"
					}
				],
				"returns": {
					"type": "void"
				}
			},
			{
				"name": "setOwner",
				"args": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"returns": {
					"type": "void"
				}
			},
			{
				"name": "collectFee",
				"args": [
					{
						"name": "algoAmount",
						"type": "uint64"
					}
				],
				"returns": {
					"type": "void"
				}
			},
			{
				"name": "createAlgoSellOrder",
				"args": [
					{
						"name": "algoPayTxn",
						"type": "pay"
					},
					{
						"name": "arc200Id",
						"type": "application"
					},
					{
						"name": "arc200Amount",
						"type": "uint256"
					}
				],
				"returns": {
					"type": "void"
				},
				"events": [
					{
						"name": "PlaceOrder",
						"args": [
							{
								"name": "orderId",
								"type": "uint64"
							},
							{
								"name": "maker",
								"type": "address"
							},
							{
								"name": "algoAmount",
								"type": "uint64"
							},
							{
								"name": "arc200Amount",
								"type": "uint256"
							},
							{
								"name": "orderDirection",
								"type": "uint8"
							}
						],
						"desc": "**********************************************"
					}
				]
			},
			{
				"name": "createAlgoBuyOrder",
				"args": [
					{
						"name": "arc200AppId",
						"type": "application"
					},
					{
						"name": "arc200Amount",
						"type": "uint256"
					},
					{
						"name": "algoAmount",
						"type": "uint64"
					}
				],
				"returns": {
					"type": "void"
				},
				"events": [
					{
						"name": "PlaceOrder",
						"args": [
							{
								"name": "orderId",
								"type": "uint64"
							},
							{
								"name": "maker",
								"type": "address"
							},
							{
								"name": "algoAmount",
								"type": "uint64"
							},
							{
								"name": "arc200Amount",
								"type": "uint256"
							},
							{
								"name": "orderDirection",
								"type": "uint8"
							}
						],
						"desc": "**********************************************"
					}
				]
			},
			{
				"name": "fillAlgoToArc200Order",
				"args": [
					{
						"name": "orderId",
						"type": "uint64"
					},
					{
						"name": "arc200Amount",
						"type": "uint256"
					}
				],
				"returns": {
					"type": "void"
				},
				"events": [
					{
						"name": "FillOrder",
						"args": [
							{
								"name": "orderId",
								"type": "uint64"
							},
							{
								"name": "maker",
								"type": "address"
							},
							{
								"name": "taker",
								"type": "address"
							},
							{
								"name": "filledAlgoAmount",
								"type": "uint64"
							},
							{
								"name": "filledArc200Amount",
								"type": "uint256"
							},
							{
								"name": "orderDirection",
								"type": "uint8"
							},
							{
								"name": "fee",
								"type": "uint256"
							}
						],
						"desc": ""
					}
				]
			},
			{
				"name": "fillArc200ToAlgoOrder",
				"args": [
					{
						"name": "orderId",
						"type": "uint64"
					},
					{
						"name": "algoPayTxn",
						"type": "pay"
					}
				],
				"returns": {
					"type": "void"
				},
				"events": [
					{
						"name": "FillOrder",
						"args": [
							{
								"name": "orderId",
								"type": "uint64"
							},
							{
								"name": "maker",
								"type": "address"
							},
							{
								"name": "taker",
								"type": "address"
							},
							{
								"name": "filledAlgoAmount",
								"type": "uint64"
							},
							{
								"name": "filledArc200Amount",
								"type": "uint256"
							},
							{
								"name": "orderDirection",
								"type": "uint8"
							},
							{
								"name": "fee",
								"type": "uint256"
							}
						],
						"desc": ""
					}
				]
			},
			{
				"name": "cancelOrder",
				"args": [
					{
						"name": "orderId",
						"type": "uint64"
					}
				],
				"returns": {
					"type": "void"
				},
				"events": [
					{
						"name": "CancelOrder",
						"args": [
							{
								"name": "orderId",
								"type": "uint64"
							},
							{
								"name": "maker",
								"type": "address"
							},
							{
								"name": "returnedAmount",
								"type": "uint256"
							},
							{
								"name": "orderDirection",
								"type": "uint8"
							}
						],
						"desc": ""
					}
				]
			},
			{
				"name": "registerOnline",
				"args": [
					{
						"name": "selection_pk",
						"type": "byte[]"
					},
					{
						"name": "state_proof_pk",
						"type": "byte[]"
					},
					{
						"name": "vote_pk",
						"type": "byte[]"
					},
					{
						"name": "vote_first",
						"type": "uint64"
					},
					{
						"name": "vote_last",
						"type": "uint64"
					},
					{
						"name": "vote_key_dilution",
						"type": "uint64"
					}
				],
				"returns": {
					"type": "void"
				}
			},
			{
				"name": "registerOffline",
				"args": [],
				"returns": {
					"type": "void"
				}
			}
		],
		"events": [
			{
				"name": "PlaceOrder",
				"args": [
					{
						"name": "orderId",
						"type": "uint64"
					},
					{
						"name": "maker",
						"type": "address"
					},
					{
						"name": "algoAmount",
						"type": "uint64"
					},
					{
						"name": "arc200Amount",
						"type": "uint256"
					},
					{
						"name": "orderDirection",
						"type": "uint8"
					}
				],
				"desc": "**********************************************"
			},
			{
				"name": "FillOrder",
				"args": [
					{
						"name": "orderId",
						"type": "uint64"
					},
					{
						"name": "maker",
						"type": "address"
					},
					{
						"name": "taker",
						"type": "address"
					},
					{
						"name": "filledAlgoAmount",
						"type": "uint64"
					},
					{
						"name": "filledArc200Amount",
						"type": "uint256"
					},
					{
						"name": "orderDirection",
						"type": "uint8"
					},
					{
						"name": "fee",
						"type": "uint256"
					}
				],
				"desc": ""
			},
			{
				"name": "CancelOrder",
				"args": [
					{
						"name": "orderId",
						"type": "uint64"
					},
					{
						"name": "maker",
						"type": "address"
					},
					{
						"name": "returnedAmount",
						"type": "uint256"
					},
					{
						"name": "orderDirection",
						"type": "uint8"
					}
				],
				"desc": ""
			}
		]
	}
}
