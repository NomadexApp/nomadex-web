{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "updateApplication()void": {
      "call_config": {
        "update_application": "CALL"
      }
    },
    "mint(pay,uint64,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "burn(axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "swap_to_arc200(pay,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "swap_from_arc200(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "create_pool_token(pay)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "register_online(byte[],byte[],byte[],uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "register_offline()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "set_fees(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "set_admin(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "admin": {
          "type": "bytes",
          "key": "admin"
        },
        "pool_token": {
          "type": "uint64",
          "key": "pool_token"
        },
        "ratio": {
          "type": "uint64",
          "key": "ratio"
        },
        "fee": {
          "type": "uint64",
          "key": "fee"
        },
        "arc200_token": {
          "type": "uint64",
          "key": "arc200_token"
        },
        "initialized": {
          "type": "bytes",
          "key": "initialized"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "Arc200Swap",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "updateApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "mint",
        "desc": "***********************************************",
        "args": [
          {
            "name": "pay_txn",
            "type": "pay"
          },
          {
            "name": "arc200_amount",
            "type": "uint64"
          },
          {
            "name": "pool_token",
            "type": "asset"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "burn",
        "args": [
          {
            "name": "lpt_pay_txn",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "swap_to_arc200",
        "desc": "***********************************************",
        "args": [
          {
            "name": "pay_txn",
            "type": "pay"
          },
          {
            "name": "min_amount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        },
        "events": [
          {
            "name": "Swap",
            "args": [
              {
                "name": "sender",
                "type": "address"
              },
              {
                "name": "from_amount",
                "type": "uint64"
              },
              {
                "name": "to_amount",
                "type": "uint64"
              },
              {
                "name": "direction",
                "type": "uint8"
              }
            ],
            "desc": ""
          }
        ]
      },
      {
        "name": "swap_from_arc200",
        "args": [
          {
            "name": "arc200_amount",
            "type": "uint64"
          },
          {
            "name": "min_amount",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        },
        "events": [
          {
            "name": "Swap",
            "args": [
              {
                "name": "sender",
                "type": "address"
              },
              {
                "name": "from_amount",
                "type": "uint64"
              },
              {
                "name": "to_amount",
                "type": "uint64"
              },
              {
                "name": "direction",
                "type": "uint8"
              }
            ],
            "desc": ""
          }
        ]
      },
      {
        "name": "create_pool_token",
        "desc": "***********************************************",
        "args": [
          {
            "name": "seed",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "register_online",
        "args": [
          {
            "name": "selection_pk",
            "type": "byte[]"
          },
          {
            "name": "state_proof_pk",
            "type": "byte[]"
          },
          {
            "name": "vote_pk",
            "type": "byte[]"
          },
          {
            "name": "vote_first",
            "type": "uint64"
          },
          {
            "name": "vote_last",
            "type": "uint64"
          },
          {
            "name": "vote_key_dilution",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "register_offline",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "set_fees",
        "args": [
          {
            "name": "fee",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "set_admin",
        "args": [
          {
            "name": "admin",
            "type": "account"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ],
    "events": [
      {
        "name": "Swap",
        "args": [
          {
            "name": "sender",
            "type": "address"
          },
          {
            "name": "from_amount",
            "type": "uint64"
          },
          {
            "name": "to_amount",
            "type": "uint64"
          },
          {
            "name": "direction",
            "type": "uint8"
          }
        ],
        "desc": ""
      }
    ]
  }
}