#pragma version 10

// This TEAL was generated by TEALScript v0.102.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *call_UpdateApplication *call_DeleteApplication *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// updateApplication()void
*abi_route_updateApplication:
	// execute updateApplication()void
	callsub updateApplication
	int 1
	return

// updateApplication(): void
updateApplication:
	proto 0 0

	// src/contracts/lib/Ownable.algo.ts:7
	// assert(this.warden.exists, 'this app can not update')
	txna Applications 0
	byte 0x77617264656e // "warden"
	app_global_get_ex
	swap
	pop

	// this app can not update
	assert

	// src/contracts/lib/Ownable.algo.ts:8
	// assert(this.txn.sender === this.warden.value, 'only manager can update')
	txn Sender
	byte 0x77617264656e // "warden"
	app_global_get
	==

	// only manager can update
	assert
	retsub

// deleteApplication()void
*abi_route_deleteApplication:
	// execute deleteApplication()void
	callsub deleteApplication
	int 1
	return

// deleteApplication(): void
deleteApplication:
	proto 0 0

	// src/contracts/lib/Ownable.algo.ts:12
	// assert(this.warden.exists, 'this app can not be deleted')
	txna Applications 0
	byte 0x77617264656e // "warden"
	app_global_get_ex
	swap
	pop

	// this app can not be deleted
	assert

	// src/contracts/lib/Ownable.algo.ts:13
	// assert(this.txn.sender === this.warden.value, 'only manager can delete')
	txn Sender
	byte 0x77617264656e // "warden"
	app_global_get
	==

	// only manager can delete
	assert

	// src/contracts/lib/Ownable.algo.ts:14
	// sendPayment({
	//       amount: 0,
	//       sender: this.app.address,
	//       receiver: this.warden.value,
	//       closeRemainderTo: this.warden.value,
	//       rekeyTo: this.warden.value,
	//       fee: globals.minTxnFee,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// src/contracts/lib/Ownable.algo.ts:15
	// amount: 0
	int 0
	itxn_field Amount

	// src/contracts/lib/Ownable.algo.ts:16
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/lib/Ownable.algo.ts:17
	// receiver: this.warden.value
	byte 0x77617264656e // "warden"
	app_global_get
	itxn_field Receiver

	// src/contracts/lib/Ownable.algo.ts:18
	// closeRemainderTo: this.warden.value
	byte 0x77617264656e // "warden"
	app_global_get
	itxn_field CloseRemainderTo

	// src/contracts/lib/Ownable.algo.ts:19
	// rekeyTo: this.warden.value
	byte 0x77617264656e // "warden"
	app_global_get
	itxn_field RekeyTo

	// src/contracts/lib/Ownable.algo.ts:20
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// manager()address
*abi_route_manager:
	// The ABI return prefix
	byte 0x151f7c75

	// execute manager()address
	callsub manager
	concat
	log
	int 1
	return

// manager(): Address
manager:
	proto 0 1

	// *if0_condition
	// src/contracts/lib/Ownable.algo.ts:26
	// this.warden.exists
	txna Applications 0
	byte 0x77617264656e // "warden"
	app_global_get_ex
	swap
	pop
	bz *if0_end

	// *if0_consequent
	// src/contracts/lib/Ownable.algo.ts:27
	// return this.warden.value;
	byte 0x77617264656e // "warden"
	app_global_get
	retsub

*if0_end:
	// src/contracts/lib/Ownable.algo.ts:29
	// return globals.zeroAddress;
	global ZeroAddress
	retsub

// grant(address)void
*abi_route_grant:
	// manager: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==

	// argument 0 (manager) for grant must be a address
	assert

	// execute grant(address)void
	callsub grant
	int 1
	return

// grant(manager: Address): void
grant:
	proto 1 0

	// src/contracts/lib/Ownable.algo.ts:33
	// assert(this.txn.sender === this.warden.value, 'only manager can grant')
	txn Sender
	byte 0x77617264656e // "warden"
	app_global_get
	==

	// only manager can grant
	assert

	// *if1_condition
	// src/contracts/lib/Ownable.algo.ts:34
	// manager === globals.zeroAddress
	frame_dig -1 // manager: Address
	global ZeroAddress
	==
	bz *if1_else

	// *if1_consequent
	// src/contracts/lib/Ownable.algo.ts:35
	// this.warden.delete()
	byte 0x77617264656e // "warden"
	app_global_del
	b *if1_end

*if1_else:
	// src/contracts/lib/Ownable.algo.ts:37
	// this.warden.value = manager
	byte 0x77617264656e // "warden"
	frame_dig -1 // manager: Address
	app_global_put

*if1_end:
	retsub

// createApplication()void
*abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	int 1
	return

// createApplication(): void
createApplication:
	proto 0 0

	// src/contracts/PoolFactory.algo.ts:31
	// this.bootstrapFee.value = 2_000_000
	byte 0x626f6f7473747261705f666565 // "bootstrap_fee"
	int 2_000_000
	app_global_put

	// src/contracts/PoolFactory.algo.ts:32
	// this.platformFee.value = <uint256>1_000_000_000_000
	byte 0x706c6174666f726d5f666565 // "platform_fee"
	byte 0x000000000000000000000000000000000000000000000000000000e8d4a51000
	app_global_put

	// src/contracts/PoolFactory.algo.ts:33
	// this.warden.value = this.txn.sender
	byte 0x77617264656e // "warden"
	txn Sender
	app_global_put
	retsub

// createPool(pay,byte[32],byte[8],uint64,uint8,uint64,uint8,uint256)uint64
*abi_route_createPool:
	// The ABI return prefix
	byte 0x151f7c75

	// swapFee: uint256
	txna ApplicationArgs 7
	dup
	len
	int 32
	==

	// argument 0 (swapFee) for createPool must be a uint256
	assert

	// betaType: uint8
	txna ApplicationArgs 6
	dup
	len
	int 1
	==

	// argument 1 (betaType) for createPool must be a uint8
	assert
	btoi

	// betaId: uint64
	txna ApplicationArgs 5
	btoi

	// alphaType: uint8
	txna ApplicationArgs 4
	dup
	len
	int 1
	==

	// argument 3 (alphaType) for createPool must be a uint8
	assert
	btoi

	// alphaId: uint64
	txna ApplicationArgs 3
	btoi

	// symbol: byte[8]
	txna ApplicationArgs 2
	dup
	len
	int 8
	==

	// argument 5 (symbol) for createPool must be a byte[8]
	assert

	// name: byte[32]
	txna ApplicationArgs 1
	dup
	len
	int 32
	==

	// argument 6 (name) for createPool must be a byte[32]
	assert

	// payTxn: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==

	// argument 7 (payTxn) for createPool must be a pay transaction
	assert

	// execute createPool(pay,byte[32],byte[8],uint64,uint8,uint64,uint8,uint256)uint64
	callsub createPool
	itob
	concat
	log
	int 1
	return

// createPool(payTxn: PayTxn, name: StaticBytes<32>, symbol: StaticBytes<8>, alphaId: uint64, alphaType: uint8, betaId: uint64, betaType: uint8, swapFee: uint256): uint64
createPool:
	proto 8 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// src/contracts/PoolFactory.algo.ts:46
	// verifyPayTxn(payTxn, {
	//       sender: this.txn.sender,
	//       receiver: this.app.address,
	//       amount: { greaterThanEqualTo: this.bootstrapFee.value },
	//     })
	// verify sender
	frame_dig -1 // payTxn: PayTxn
	gtxns Sender
	txn Sender
	==

	// transaction verification failed: {"txn":"payTxn","field":"sender","expected":"this.txn.sender"}
	assert

	// verify receiver
	frame_dig -1 // payTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// transaction verification failed: {"txn":"payTxn","field":"receiver","expected":"this.app.address"}
	assert

	// verify amount
	frame_dig -1 // payTxn: PayTxn
	gtxns Amount
	byte 0x626f6f7473747261705f666565 // "bootstrap_fee"
	app_global_get
	>=

	// transaction verification failed: {"txn":"payTxn","field":"amount","condition":"greaterThanEqualTo","expected":">=this.bootstrapFee.value"}
	assert

	// *if2_condition
	// src/contracts/PoolFactory.algo.ts:52
	// alphaType === ASA
	frame_dig -5 // alphaType: uint8
	int 1
	==
	bz *if2_end

	// *if2_consequent
	// src/contracts/PoolFactory.algo.ts:53
	// sendAssetTransfer({
	//         xferAsset: AssetID.fromUint64(alphaId),
	//         sender: this.app.address,
	//         assetReceiver: this.app.address,
	//         assetAmount: 0,
	//         fee: globals.minTxnFee
	//       })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// src/contracts/PoolFactory.algo.ts:54
	// xferAsset: AssetID.fromUint64(alphaId)
	frame_dig -4 // alphaId: uint64
	itxn_field XferAsset

	// src/contracts/PoolFactory.algo.ts:55
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:56
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// src/contracts/PoolFactory.algo.ts:57
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// src/contracts/PoolFactory.algo.ts:58
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

*if2_end:
	// *if3_condition
	// src/contracts/PoolFactory.algo.ts:61
	// betaType === ASA
	frame_dig -7 // betaType: uint8
	int 1
	==
	bz *if3_end

	// *if3_consequent
	// src/contracts/PoolFactory.algo.ts:62
	// sendAssetTransfer({
	//         xferAsset: AssetID.fromUint64(betaId),
	//         sender: this.app.address,
	//         assetReceiver: this.app.address,
	//         assetAmount: 0,
	//         fee: globals.minTxnFee
	//       })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// src/contracts/PoolFactory.algo.ts:63
	// xferAsset: AssetID.fromUint64(betaId)
	frame_dig -6 // betaId: uint64
	itxn_field XferAsset

	// src/contracts/PoolFactory.algo.ts:64
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:65
	// assetReceiver: this.app.address
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// src/contracts/PoolFactory.algo.ts:66
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// src/contracts/PoolFactory.algo.ts:67
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

*if3_end:
	// src/contracts/PoolFactory.algo.ts:71
	// sendMethodCall<[AppID, Address, StaticBytes<32>, StaticBytes<8>, uint64, uint8, uint64, uint8, uint256], void>({
	//       name: 'createApplication',
	//       methodArgs: [
	//         this.app,
	//         this.app.address,
	//         name,
	//         symbol,
	//         alphaId,
	//         alphaType,
	//         betaId,
	//         betaType,
	//         swapFee,
	//       ],
	//       approvalProgram: Pool.approvalProgramPages(),
	//       clearStateProgram: Pool.clearProgram(),
	//       extraProgramPages: 3,
	//       localNumByteSlice: Pool.schema.local.numByteSlice,
	//       localNumUint: Pool.schema.local.numUint,
	//       globalNumByteSlice: Pool.schema.global.numByteSlice,
	//       globalNumUint: Pool.schema.global.numUint,
	//       fee: globals.minTxnFee
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "createApplication(uint64,address,byte[32],byte[8],uint64,uint8,uint64,uint8,uint256)void"
	itxn_field ApplicationArgs

	// src/contracts/PoolFactory.algo.ts:73
	// methodArgs: [
	//         this.app,
	//         this.app.address,
	//         name,
	//         symbol,
	//         alphaId,
	//         alphaType,
	//         betaId,
	//         betaType,
	//         swapFee,
	//       ]
	txna Applications 0
	itob
	itxn_field ApplicationArgs
	global CurrentApplicationAddress
	itxn_field ApplicationArgs
	frame_dig -2 // name: StaticBytes<32>
	itxn_field ApplicationArgs
	frame_dig -3 // symbol: StaticBytes<8>
	itxn_field ApplicationArgs
	frame_dig -4 // alphaId: uint64
	itob
	itxn_field ApplicationArgs
	frame_dig -5 // alphaType: uint8
	itob
	extract 7 1
	itxn_field ApplicationArgs
	frame_dig -6 // betaId: uint64
	itob
	itxn_field ApplicationArgs
	frame_dig -7 // betaType: uint8
	itob
	extract 7 1
	itxn_field ApplicationArgs
	frame_dig -8 // swapFee: uint256
	itxn_field ApplicationArgs

	// src/contracts/PoolFactory.algo.ts:84
	// approvalProgram: Pool.approvalProgramPages()
	byte b64 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
	itxn_field ApprovalProgramPages
	byte b64 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
	itxn_field ApprovalProgramPages
	byte b64 /osASZMkDkQorEkVSSIJTFKI/kGMAIk2GglJFSISRDYaCEkVIxJEFzYaBxc2GgZJFSMSRBc2GgUXNhoESRUhBxJENhoDSRUiEkQ2GgJJFSISRDYaAReIAAIjQ4oJACuL/mcnEYv9ZycSi/xnJxOAAQZnJwsnDIEKIQSUFqNJkyQORCisSRVJIglMUmcnECUnBSVPAlRnJwqL/2cnCIv7ZycJi/lnJwaL+hZXBwFnJweL+BZXBwFnJw2L92eJiAACI0OKAAAxACtkEkQnEGQlUyMTRCcQIycFJU8CVGcyCicLZL8nBmQXIxJBAAonCGQpMgqI9ZdEJwdkFyMSQQAKJwlkKTIKiPWERImABCRqIzU2GgCOAf8AAIAEZX0T7IAEtq4aJScWgATsmWBBJw6ABLuzGfMnD4AEtUIhJScVgAROIqO6gAQzbo1fgARmMEL7gAS8SlQAgATJjdBVJxeABGdDQDGABHn1sI2ABHCAR2mABFQuDwuABM4xijqABMWxls6ABALB8tCABL7HbYc2GgCOF+9574jvl++x787v/vDL8SnxVPIB8wDzDvNG827zpPP79Bb0PvhH+mj9ov38/vwAgARG92UzNhoAjgHzowCABCSHwyw2GgCOAfOsAA==
	itxn_field ApprovalProgramPages

	// src/contracts/PoolFactory.algo.ts:85
	// clearStateProgram: Pool.clearProgram()
	byte b64 Cg==
	itxn_field ClearStateProgram

	// src/contracts/PoolFactory.algo.ts:86
	// extraProgramPages: 3
	int 3
	itxn_field ExtraProgramPages

	// src/contracts/PoolFactory.algo.ts:87
	// localNumByteSlice: Pool.schema.local.numByteSlice
	int 0
	itxn_field LocalNumByteSlice

	// src/contracts/PoolFactory.algo.ts:88
	// localNumUint: Pool.schema.local.numUint
	int 0
	itxn_field LocalNumUint

	// src/contracts/PoolFactory.algo.ts:89
	// globalNumByteSlice: Pool.schema.global.numByteSlice
	int 9
	itxn_field GlobalNumByteSlice

	// src/contracts/PoolFactory.algo.ts:90
	// globalNumUint: Pool.schema.global.numUint
	int 3
	itxn_field GlobalNumUint

	// src/contracts/PoolFactory.algo.ts:91
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// src/contracts/PoolFactory.algo.ts:93
	// poolId = this.itxn.createdApplicationID
	itxn CreatedApplicationID
	frame_bury 0 // poolId: uint64

	// src/contracts/PoolFactory.algo.ts:95
	// sendPayment({
	//       sender: this.app.address,
	//       receiver: poolId.address,
	//       amount: globals.minBalance * 5 + globals.minTxnFee * 10,
	//       fee: globals.minTxnFee,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// src/contracts/PoolFactory.algo.ts:96
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:97
	// receiver: poolId.address
	frame_dig 0 // poolId: uint64
	app_params_get AppAddress
	pop
	itxn_field Receiver

	// src/contracts/PoolFactory.algo.ts:98
	// amount: globals.minBalance * 5 + globals.minTxnFee * 10
	global MinBalance
	int 5
	*
	global MinTxnFee
	int 10
	*
	+
	itxn_field Amount

	// src/contracts/PoolFactory.algo.ts:99
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// src/contracts/PoolFactory.algo.ts:102
	// this.PoolCreated.log({
	//       poolId: poolId,
	//       alphaId: alphaId,
	//       alphaType: alphaType,
	//       betaId: betaId,
	//       betaType: betaType,
	//       swapFee: swapFee,
	//     })
	byte 0xe0c83843 // PoolCreated(uint64,uint64,uint8,uint64,uint8,uint256)
	frame_dig 0 // poolId: uint64
	itob
	frame_dig -4 // alphaId: uint64
	itob
	concat
	frame_dig -5 // alphaType: uint8
	itob
	extract 7 1
	concat
	frame_dig -6 // betaId: uint64
	itob
	concat
	frame_dig -7 // betaType: uint8
	itob
	extract 7 1
	concat
	frame_dig -8 // swapFee: uint256
	concat
	concat
	log

	// src/contracts/PoolFactory.algo.ts:111
	// return poolId.id;
	frame_dig 0 // poolId: uint64

	// set the subroutine return value
	frame_bury 0
	retsub

// poolBootstrap(uint64)void
*abi_route_poolBootstrap:
	// poolId: uint64
	txna ApplicationArgs 1
	btoi

	// execute poolBootstrap(uint64)void
	callsub poolBootstrap
	int 1
	return

// poolBootstrap(poolId: AppID): void
poolBootstrap:
	proto 1 0

	// src/contracts/PoolFactory.algo.ts:115
	// sendMethodCall<[], void>({
	//       name: 'bootstrap',
	//       methodArgs: [],
	//       sender: this.app.address,
	//       applicationID: poolId,
	//       fee: globals.minTxnFee,
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "bootstrap()void"
	itxn_field ApplicationArgs

	// src/contracts/PoolFactory.algo.ts:117
	// methodArgs: []
	// src/contracts/PoolFactory.algo.ts:118
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:119
	// applicationID: poolId
	frame_dig -1 // poolId: AppID
	itxn_field ApplicationID

	// src/contracts/PoolFactory.algo.ts:120
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// src/contracts/PoolFactory.algo.ts:123
	// this.PoolBootstrap.log({
	//       poolId: poolId,
	//     })
	byte 0x4efd37fd // PoolBootstrap(uint64)
	frame_dig -1 // poolId: AppID
	itob
	concat
	log
	retsub

// setFee(uint64)bool
*abi_route_setFee:
	// The ABI return prefix
	byte 0x151f7c75

	// fee: uint64
	txna ApplicationArgs 1
	btoi

	// execute setFee(uint64)bool
	callsub setFee
	byte 0x00
	int 0
	uncover 2
	setbit
	concat
	log
	int 1
	return

// setFee(fee: uint64): boolean
setFee:
	proto 1 1

	// src/contracts/PoolFactory.algo.ts:129
	// assert(this.warden.value === this.txn.sender)
	byte 0x77617264656e // "warden"
	app_global_get
	txn Sender
	==
	assert

	// src/contracts/PoolFactory.algo.ts:130
	// this.bootstrapFee.value = fee
	byte 0x626f6f7473747261705f666565 // "bootstrap_fee"
	frame_dig -1 // fee: uint64
	app_global_put

	// src/contracts/PoolFactory.algo.ts:131
	// return true;
	int 1
	retsub

// setPlatformFee(uint256)bool
*abi_route_setPlatformFee:
	// The ABI return prefix
	byte 0x151f7c75

	// fee: uint256
	txna ApplicationArgs 1
	dup
	len
	int 32
	==

	// argument 0 (fee) for setPlatformFee must be a uint256
	assert

	// execute setPlatformFee(uint256)bool
	callsub setPlatformFee
	byte 0x00
	int 0
	uncover 2
	setbit
	concat
	log
	int 1
	return

// setPlatformFee(fee: uint256): boolean
setPlatformFee:
	proto 1 1

	// src/contracts/PoolFactory.algo.ts:135
	// assert(this.warden.value === this.txn.sender)
	byte 0x77617264656e // "warden"
	app_global_get
	txn Sender
	==
	assert

	// src/contracts/PoolFactory.algo.ts:136
	// this.platformFee.value = fee
	byte 0x706c6174666f726d5f666565 // "platform_fee"
	frame_dig -1 // fee: uint256
	app_global_put

	// src/contracts/PoolFactory.algo.ts:137
	// return true;
	int 1
	retsub

// setPoolManager(uint64,address)void
*abi_route_setPoolManager:
	// manager: address
	txna ApplicationArgs 2
	dup
	len
	int 32
	==

	// argument 0 (manager) for setPoolManager must be a address
	assert

	// poolId: uint64
	txna ApplicationArgs 1
	btoi

	// execute setPoolManager(uint64,address)void
	callsub setPoolManager
	int 1
	return

// setPoolManager(poolId: AppID, manager: Address): void
setPoolManager:
	proto 2 0

	// src/contracts/PoolFactory.algo.ts:141
	// sendMethodCall<[Address], void>({
	//       name: 'grant',
	//       methodArgs: [manager],
	//       sender: this.app.address,
	//       applicationID: poolId,
	//       fee: globals.minTxnFee
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "grant(address)void"
	itxn_field ApplicationArgs

	// src/contracts/PoolFactory.algo.ts:143
	// methodArgs: [manager]
	frame_dig -2 // manager: Address
	itxn_field ApplicationArgs

	// src/contracts/PoolFactory.algo.ts:144
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:145
	// applicationID: poolId
	frame_dig -1 // poolId: AppID
	itxn_field ApplicationID

	// src/contracts/PoolFactory.algo.ts:146
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// extract(address,uint256,(uint64,uint64))void
*abi_route_extract:
	// id: (uint64,uint64)
	txna ApplicationArgs 3
	dup
	len
	int 16
	==

	// argument 0 (id) for extract must be a (uint64,uint64)
	assert

	// amount: uint256
	txna ApplicationArgs 2
	dup
	len
	int 32
	==

	// argument 1 (amount) for extract must be a uint256
	assert

	// to: address
	txna ApplicationArgs 1
	dup
	len
	int 32
	==

	// argument 2 (to) for extract must be a address
	assert

	// execute extract(address,uint256,(uint64,uint64))void
	callsub extract
	int 1
	return

// extract(to: Address, amount: uint256, id: [uint64, uint64]): void
extract:
	proto 3 0

	// src/contracts/PoolFactory.algo.ts:151
	// assert(this.txn.sender === this.warden.value, "denied")
	txn Sender
	byte 0x77617264656e // "warden"
	app_global_get
	==

	// denied
	assert

	// *if4_condition
	// src/contracts/PoolFactory.algo.ts:152
	// id[0] > 0
	frame_dig -3 // id: [uint64, uint64]
	extract 0 8
	btoi
	int 0
	>
	bz *if4_elseif1_condition

	// *if4_consequent
	// src/contracts/PoolFactory.algo.ts:153
	// sendAssetTransfer({
	//         xferAsset: AssetID.fromUint64(id[0]),
	//         sender: this.app.address,
	//         assetReceiver: to,
	//         assetAmount: <uint64>amount,
	//         fee: globals.minTxnFee,
	//       })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// src/contracts/PoolFactory.algo.ts:154
	// xferAsset: AssetID.fromUint64(id[0])
	frame_dig -3 // id: [uint64, uint64]
	extract 0 8
	btoi
	itxn_field XferAsset

	// src/contracts/PoolFactory.algo.ts:155
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:156
	// assetReceiver: to
	frame_dig -1 // to: Address
	itxn_field AssetReceiver

	// src/contracts/PoolFactory.algo.ts:157
	// assetAmount: <uint64>amount
	frame_dig -2 // amount: uint256
	dup
	bitlen
	int 64
	<=

	// <uint64>amount overflowed 64 bits
	assert
	extract 24 8
	btoi
	itxn_field AssetAmount

	// src/contracts/PoolFactory.algo.ts:158
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	b *if4_end

*if4_elseif1_condition:
	// src/contracts/PoolFactory.algo.ts:160
	// id[1] > 0
	frame_dig -3 // id: [uint64, uint64]
	extract 8 8
	btoi
	int 0
	>
	bz *if4_else

	// *if4_elseif1_consequent
	// src/contracts/PoolFactory.algo.ts:161
	// sendMethodCall<[Address, uint256], uint256>({
	//         applicationID: AppID.fromUint64(id[1]),
	//         sender: this.app.address,
	//         name: 'arc200_transfer',
	//         methodArgs: [to, amount],
	//         fee: globals.minTxnFee,
	//       })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "arc200_transfer(address,uint256)uint256"
	itxn_field ApplicationArgs

	// src/contracts/PoolFactory.algo.ts:162
	// applicationID: AppID.fromUint64(id[1])
	frame_dig -3 // id: [uint64, uint64]
	extract 8 8
	btoi
	itxn_field ApplicationID

	// src/contracts/PoolFactory.algo.ts:163
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:165
	// methodArgs: [to, amount]
	frame_dig -1 // to: Address
	itxn_field ApplicationArgs
	frame_dig -2 // amount: uint256
	itxn_field ApplicationArgs

	// src/contracts/PoolFactory.algo.ts:166
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	b *if4_end

*if4_else:
	// src/contracts/PoolFactory.algo.ts:169
	// sendPayment({
	//         sender: this.app.address,
	//         receiver: to,
	//         amount: <uint64>amount,
	//         fee: globals.minTxnFee,
	//       })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// src/contracts/PoolFactory.algo.ts:170
	// sender: this.app.address
	global CurrentApplicationAddress
	itxn_field Sender

	// src/contracts/PoolFactory.algo.ts:171
	// receiver: to
	frame_dig -1 // to: Address
	itxn_field Receiver

	// src/contracts/PoolFactory.algo.ts:172
	// amount: <uint64>amount
	frame_dig -2 // amount: uint256
	dup
	bitlen
	int 64
	<=

	// <uint64>amount overflowed 64 bits
	assert
	extract 24 8
	btoi
	itxn_field Amount

	// src/contracts/PoolFactory.algo.ts:173
	// fee: globals.minTxnFee
	global MinTxnFee
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

*if4_end:
	// src/contracts/PoolFactory.algo.ts:176
	// this.Extract.log({
	//       to: to,
	//       amount: amount,
	//       asaId: id[0],
	//       smartAssetId: id[1]
	//     })
	byte 0xa2663d93 // Extract(address,uint256,uint64,uint64)
	frame_dig -1 // to: Address
	frame_dig -2 // amount: uint256
	concat
	frame_dig -3 // id: [uint64, uint64]
	extract 0 8
	btoi
	itob
	concat
	frame_dig -3 // id: [uint64, uint64]
	extract 8 8
	btoi
	itob
	concat
	concat
	log
	retsub

// noop(uint64)void
*abi_route_noop:
	// number: uint64
	txna ApplicationArgs 1
	btoi

	// execute noop(uint64)void
	callsub noop
	int 1
	return

// noop(number: uint64): void
noop:
	proto 1 0
	retsub

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	method "manager()address"
	method "grant(address)void"
	method "createPool(pay,byte[32],byte[8],uint64,uint8,uint64,uint8,uint256)uint64"
	method "poolBootstrap(uint64)void"
	method "setFee(uint64)bool"
	method "setPlatformFee(uint256)bool"
	method "setPoolManager(uint64,address)void"
	method "extract(address,uint256,(uint64,uint64))void"
	method "noop(uint64)void"
	txna ApplicationArgs 0
	match *abi_route_manager *abi_route_grant *abi_route_createPool *abi_route_poolBootstrap *abi_route_setFee *abi_route_setPlatformFee *abi_route_setPoolManager *abi_route_extract *abi_route_noop

	// this contract does not implement the given ABI method for call NoOp
	err

*call_UpdateApplication:
	method "updateApplication()void"
	txna ApplicationArgs 0
	match *abi_route_updateApplication

	// this contract does not implement the given ABI method for call UpdateApplication
	err

*call_DeleteApplication:
	method "deleteApplication()void"
	txna ApplicationArgs 0
	match *abi_route_deleteApplication

	// this contract does not implement the given ABI method for call DeleteApplication
	err